{"version":3,"sources":["core/types/Card.ts","core/store/context.ts","core/utils/constants.ts","core/store/reducer.ts","core/utils/value.ts","core/store/Store.tsx","styles/theme.ts","styles/device.ts","styles/GlobalStyle.ts","components/Hand.tsx","components/Score.tsx","components/GameCard.tsx","core/services/api.ts","components/Button.tsx","components/MainActions.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Value","initialState","deckId","undefined","player","cards","score","bank","playerStood","gameOver","win","context","createContext","Provider","Consumer","Actions","SCORE_LIMIT","FACE_CARDS","KING","QUEEN","JACK","ACE_CARD","ACE","GAME_OVER","WIN","NO_CHANGE","getValue","value","includes","getScore","values","scoreWithoutAce","filter","reduce","acc","aceNumber","length","reducer","state","action","type","NEW_GAME","payload","PLAYER_HIT","newPlayerCards","concat","newPlayerScore","map","card","BANK_HIT","newBankCards","newBankScore","PLAYER_STAND","UPDATE_GAME","Store","children","useReducer","dispatch","theme","colors","black","white","greyDark","pink","purple","purpleDark","size","device","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","desktopL","GlobalStyle","createGlobalStyle","imagePerLine","Wrapper","styled","div","Image","img","number","Hand","index","src","image","alt","suit","Score","article","Title","h2","GameCard","game","title","a","axios","get","response","data","getNewCard","defaults","baseURL","Button","button","disabled","MainActions","useContext","useMemo","interval","useRef","startNewGame","getNewDeck","then","deck_id","useEffect","current","setInterval","catch","err","clearInterval","onClick","Container","h1","App","results","playerScore","bankScore","evaluateScoreResults","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3baab8fd.chunk.js","sourcesContent":["export enum Value {\n  ACE = 'ACE',\n  KING = 'KING',\n  QUEEN = 'QUEEN',\n  JACK = 'JACK',\n  ONE = '1',\n  TWO = '2',\n  THREE = '3',\n  FOUR = '4',\n  FIVE = '5',\n  SIX = '6',\n  SEVEN = '7',\n  EIGHT = '8',\n  NINE = '9',\n  TEN = '10',\n}\n\nexport default interface Card {\n  image: string;\n  value: Value;\n  suit: string;\n  code: string;\n}\n","import { createContext, Dispatch } from 'react';\nimport Card from '../types/Card';\nimport { Action } from './reducer';\n\ninterface Player {\n  cards: Card[];\n  score: number;\n}\n\nexport interface State {\n  deckId?: string;\n  player: Player;\n  bank: Player;\n  playerStood: boolean;\n  gameOver: boolean;\n  win: boolean;\n}\n\nexport type Context = [State, Dispatch<Action>];\n\nexport const initialState: State = {\n  deckId: undefined,\n  player: {\n    cards: [],\n    score: 0,\n  },\n  bank: {\n    cards: [],\n    score: 0,\n  },\n  playerStood: false,\n  gameOver: false,\n  win: false,\n};\n\n// @ts-ignore\nconst context = createContext<Context>([]);\nconst { Provider, Consumer } = context;\n\nexport { Provider, Consumer };\nexport default context;\n","import { Value } from '../types/Card';\n\nexport const SCORE_LIMIT = 21;\n\nexport const FACE_CARDS = [Value.KING, Value.QUEEN, Value.JACK];\nexport const FACE_CARDS_VALUE = 10;\n\nexport const OTHER_CARDS_VALUE = 1;\n\nexport const ACE_CARD = Value.ACE;\nexport const ACE_VALUE_UNDER_21 = 11;\nexport const ACE_VALUE_OVER_21 = 1;\n\nexport const GAME_OVER = {\n  gameOver: true,\n  win: false,\n};\n\nexport const WIN = {\n  gameOver: false,\n  win: true,\n};\n\nexport const NO_CHANGE = {\n  gameOver: false,\n  win: false,\n};\n","import { initialState, State } from './context';\nimport Card from '../types/Card';\nimport { getScore } from '../utils/value';\n\nexport enum Actions {\n  NEW_GAME = 'NEW_GAME',\n  PLAYER_HIT = 'PLAYER_HIT',\n  PLAYER_STAND = 'PLAYER_STAND',\n  BANK_HIT = 'BANK_HIT',\n  UPDATE_GAME = 'UPDATE_GAME',\n}\n\nexport type Action =\n  | { type: Actions.NEW_GAME; payload: string }\n  | { type: Actions.PLAYER_HIT; payload: Card }\n  | { type: Actions.PLAYER_STAND }\n  | { type: Actions.BANK_HIT; payload: Card }\n  | { type: Actions.UPDATE_GAME; payload: { win: boolean; gameOver: boolean } };\n\nexport default function reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case Actions.NEW_GAME:\n      return {\n        ...initialState,\n        deckId: action.payload,\n      };\n    case Actions.PLAYER_HIT:\n      const newPlayerCards = state.player.cards.concat(action.payload);\n      const newPlayerScore = getScore(newPlayerCards.map((card) => card.value));\n\n      return {\n        ...state,\n        player: {\n          ...state.player,\n          cards: newPlayerCards,\n          score: newPlayerScore,\n        },\n      };\n    case Actions.BANK_HIT:\n      const newBankCards = state.bank.cards.concat(action.payload);\n      const newBankScore = getScore(newBankCards.map((card) => card.value));\n\n      return {\n        ...state,\n        bank: {\n          ...state.bank,\n          cards: newBankCards,\n          score: newBankScore,\n        },\n      };\n    case Actions.PLAYER_STAND:\n      return {\n        ...state,\n        playerStood: true,\n      };\n    case Actions.UPDATE_GAME:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { Value } from '../types/Card';\nimport {\n  ACE_CARD,\n  ACE_VALUE_OVER_21,\n  ACE_VALUE_UNDER_21,\n  FACE_CARDS,\n  FACE_CARDS_VALUE,\n  OTHER_CARDS_VALUE,\n  SCORE_LIMIT,\n  WIN,\n  GAME_OVER,\n  NO_CHANGE,\n} from './constants';\n\nexport function getValue(value: Value) {\n  if (FACE_CARDS.includes(value)) {\n    return FACE_CARDS_VALUE;\n  } else {\n    return OTHER_CARDS_VALUE;\n  }\n}\n\nexport function getScore(values: Value[]) {\n  if (values.includes(ACE_CARD)) {\n    const scoreWithoutAce = values\n      .filter((value) => value !== ACE_CARD)\n      .reduce((acc, value) => acc + getValue(value), 0);\n\n    const aceNumber = values.filter((value) => value === ACE_CARD).length;\n\n    if (aceNumber > 1) {\n      // if there is more than one ace, the ace value is set as 1\n      return scoreWithoutAce + ACE_VALUE_OVER_21 * aceNumber;\n    } else if (scoreWithoutAce + ACE_VALUE_UNDER_21 > SCORE_LIMIT) {\n      // if the ace with a value of 11 go over the score limit, the ace value is set as 1\n      return scoreWithoutAce + ACE_VALUE_OVER_21;\n    } else {\n      // in other cases, the value of ace is set as 11\n      return scoreWithoutAce + ACE_VALUE_UNDER_21;\n    }\n  }\n\n  return values.reduce((acc, value) => acc + getValue(value), 0);\n}\n\nexport function evaluateScoreResults(\n  playerScore: number,\n  bankScore: number,\n  playerStood: boolean\n) {\n  if (playerScore > SCORE_LIMIT || bankScore === SCORE_LIMIT) {\n    return GAME_OVER;\n  } else if (\n    playerScore <= SCORE_LIMIT &&\n    playerStood &&\n    bankScore > SCORE_LIMIT\n  ) {\n    return WIN;\n  } else {\n    return NO_CHANGE;\n  }\n}\n","import { Reducer, useReducer } from 'react';\nimport reducer, { Action } from './reducer';\nimport { Provider, State, initialState } from './context';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport default function Store({ children }: Props) {\n  const [state, dispatch] = useReducer<Reducer<State, Action>>(reducer, initialState);\n\n  return <Provider value={[state, dispatch]}>{children}</Provider>;\n}\n","export type ThemeType = typeof theme;\n\nconst theme = {\n  colors: {\n    black: '#050505',\n    white: '#ffffff',\n    greyDark: '#191919',\n    pink: '#f093b0',\n    purple: '#4f41ab',\n    purpleDark: '#3725ae',\n  },\n};\n\nexport default theme;\n","const size = {\n  mobileS: '320px',\n  mobileM: '375px',\n  mobileL: '425px',\n  tablet: '768px',\n  laptop: '1024px',\n  laptopL: '1440px',\n  desktop: '2560px',\n};\n\nconst device = {\n  mobileS: `(min-width: ${size.mobileS})`,\n  mobileM: `(min-width: ${size.mobileM})`,\n  mobileL: `(min-width: ${size.mobileL})`,\n  tablet: `(min-width: ${size.tablet})`,\n  laptop: `(min-width: ${size.laptop})`,\n  laptopL: `(min-width: ${size.laptopL})`,\n  desktop: `(min-width: ${size.desktop})`,\n  desktopL: `(min-width: ${size.desktop})`,\n};\n\nexport default device;\n","import { createGlobalStyle } from 'styled-components';\nimport { ThemeType } from './theme';\n\nconst GlobalStyle = createGlobalStyle<{ theme: ThemeType }>`\nhtml, body {\n  height: 100%;\n}\n\n*, \n*:before, \n*:after {\n  box-sizing: border-box;\n}\n\nbody {\n  background: ${({ theme }) => theme.colors.black};\n  color: ${({ theme }) => theme.colors.white}\n}\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Card from '../core/types/Card';\nimport device from '../styles/device';\n\ninterface Props {\n  cards: Card[];\n}\n\ntype ImageProps = {\n  number: number;\n};\n\nconst imagePerLine = {\n  mobile: 5,\n  desktop: 9,\n};\n\nconst Wrapper = styled.div`\n  position: relative;\n  height: 200px;\n  width: 100%;\n`;\n\nconst Image = styled.img<ImageProps>`\n  position: absolute;\n  top: ${({ number }) => (number > imagePerLine.mobile ? '40px;' : '0px')};\n  left: ${({ number }) =>\n    number > imagePerLine.mobile\n      ? (number - imagePerLine.mobile - 1) * 30\n      : number * 30}px;\n  height: 100px;\n  box-shadow: 1px 0 8px ${({ theme }) => theme.colors.black};\n\n  @media ${device.mobileL} {\n    top: ${({ number }) => (number > imagePerLine.desktop ? '40px;' : '0px')};\n    left: ${({ number }) =>\n      number > imagePerLine.desktop\n        ? (number - imagePerLine.desktop - 1) * 30\n        : number * 30}px;\n  }\n`;\n\nexport default function Hand({ cards }: Props) {\n  return (\n    <Wrapper>\n      {cards.map((card, index) => (\n        <Image\n          key={`${card.value}_${card.suit}_${index}`}\n          src={card.image}\n          alt={`${card.value}_${card.suit}`}\n          number={index}\n        />\n      ))}\n    </Wrapper>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface Props {\n  score: number;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 20px;\n  width: 40px;\n  height: 40px;\n  background-color: ${({ theme }) => theme.colors.pink};\n  color: ${({ theme }) => theme.colors.greyDark};\n  border-radius: 50%;\n`;\n\nexport default function Score({ score }: Props) {\n  return <Wrapper>{score}</Wrapper>;\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Card from '../core/types/Card';\nimport device from '../styles/device';\n\nimport Hand from './Hand';\nimport Score from './Score';\n\ninterface Props {\n  title: string;\n  game: {\n    cards: Card[];\n    score: number;\n  };\n}\n\nconst Wrapper = styled.article`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  background-color: ${({ theme }) => theme.colors.greyDark};\n  width: 100%;\n  height: 400px;\n  border-radius: 5px;\n  padding: 20px;\n\n  @media ${device.tablet} {\n    width: 400px;\n  }\n`;\n\nconst Title = styled.h2``;\n\nexport default function GameCard({ game, title }: Props) {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      <Hand cards={game.cards} />\n      <Score score={game.score} />\n    </Wrapper>\n  );\n}\n","import axios, { AxiosResponse } from 'axios';\nimport Deck from '../types/Deck';\nimport Card from '../types/Card';\n\n// setup the base API URL\naxios.defaults.baseURL = 'https://deckofcardsapi.com/api/';\n\nexport async function getNewDeck(): Promise<Deck> {\n  const response: AxiosResponse<Deck> = await axios.get(\n    'deck/new/shuffle/?deck_count=6'\n  );\n\n  return response.data;\n}\n\nexport async function getNewCard(deckId: string): Promise<Card> {\n  const response: AxiosResponse<{ cards: Card[] }> = await axios.get(\n    `deck/${deckId}/draw/?count=1`\n  );\n\n  return response.data.cards[0];\n}\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  font-family: 'Poppins';\n  border: 0;\n  padding: 10px 40px;\n  font-size: 1rem;\n  text-transform: uppercase;\n  border-radius: 30px;\n  background-color: ${({ theme, disabled }) =>\n    !disabled ? theme.colors.purple : theme.colors.greyDark};\n  color: ${({ theme }) => theme.colors.white};\n  ${({ disabled }) => !disabled && 'cursor: pointer;'}\n  transition: background-color 0.3s ease;\n  box-shadow: 1px 1px 1px;\n\n  &:hover {\n    background-color: ${({ theme, disabled }) =>\n      !disabled ? theme.colors.purpleDark : theme.colors.greyDark};\n  }\n`;\n\nexport default Button;\n","import React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport styled from 'styled-components';\n\nimport { getNewCard, getNewDeck } from '../core/services/api';\nimport context from '../core/store/context';\nimport { Actions } from '../core/store/reducer';\nimport { SCORE_LIMIT } from '../core/utils/constants';\nimport device from '../styles/device';\n\nimport Button from './Button';\n\nconst Wrapper = styled.div`\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column-reverse;\n  margin: 30px;\n\n  > div:last-child > button:first-child {\n    margin-right: 10px;\n  }\n\n  > div:first-child {\n    margin-top: 10px;\n  }\n\n  @media ${device.tablet} {\n    flex-direction: row;\n  }\n`;\n\nexport default function MainActions() {\n  const [{ deckId, bank, playerStood, win, gameOver }, dispatch] = useContext(\n    context\n  );\n\n  const disabled = useMemo(() => playerStood || win || gameOver, [\n    playerStood,\n    win,\n    gameOver,\n  ]);\n\n  const interval = useRef<null | number>(null);\n\n  const startNewGame = () => {\n    getNewDeck().then((data) =>\n      dispatch({ type: Actions.NEW_GAME, payload: data.deck_id })\n    );\n  };\n\n  const playerHitting = () => {\n    getNewCard(deckId!)\n      .then((data) => dispatch({ type: Actions.PLAYER_HIT, payload: data }))\n      .catch((err) => err);\n  };\n\n  const playerStanding = () => {\n    dispatch({ type: Actions.PLAYER_STAND });\n  };\n\n  useEffect(() => {\n    if (!deckId) {\n      startNewGame();\n    }\n  });\n\n  useEffect(() => {\n    if (playerStood && !interval.current) {\n      interval.current = setInterval(() => {\n        getNewCard(deckId!)\n          .then((data) => dispatch({ type: Actions.BANK_HIT, payload: data }))\n          .catch((err) => err);\n      }, 2000);\n    } else if (bank.score >= SCORE_LIMIT) {\n      clearInterval(interval.current!);\n      interval.current = null;\n    }\n  }, [playerStood, bank.score, deckId, dispatch]);\n\n  return (\n    <Wrapper>\n      <div>\n        <Button onClick={startNewGame}>Start new game</Button>\n      </div>\n      <div>\n        <Button disabled={disabled} onClick={playerHitting}>\n          Hit\n        </Button>\n        <Button disabled={disabled} onClick={playerStanding}>\n          Stand\n        </Button>\n      </div>\n    </Wrapper>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport theme from './styles/theme';\nimport device from './styles/device';\nimport GlobalStyle from './styles/GlobalStyle';\n\nimport context from './core/store/context';\nimport { Actions } from './core/store/reducer';\nimport { evaluateScoreResults } from './core/utils/value';\n\nimport GameCard from './components/GameCard';\nimport MainActions from './components/MainActions';\n\nconst Container = styled.div`\n  text-align: center;\n  margin-bottom: 200px;\n\n  @media ${device.tablet} {\n    margin-bottom: 100px;\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 0 20px;\n\n  > *:first-child {\n    margin-bottom: 20px;\n  }\n\n  @media ${device.tablet} {\n    flex-direction: row;\n    align-items: center;\n    justify-content: center;\n\n    > *:first-child {\n      margin-bottom: 0;\n      margin-right: 20px;\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-family: 'Poppins';\n  font-size: 3rem;\n`;\n\nfunction App() {\n  const [state, dispatch] = useContext(context);\n  const { player, bank, playerStood, gameOver, win } = state;\n\n  useEffect(() => {\n    if (player.score !== 0) {\n      const results = evaluateScoreResults(\n        player.score,\n        bank.score,\n        playerStood\n      );\n\n      if (results.win || results.gameOver) {\n        dispatch({ type: Actions.UPDATE_GAME, payload: results });\n      }\n    }\n  }, [player.score, bank.score, playerStood, dispatch]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n        <Title>BlackJack</Title>\n        <Wrapper>\n          <GameCard title=\"Bank\" game={bank} />\n          <GameCard title=\"Player\" game={player} />\n        </Wrapper>\n        <MainActions />\n        {win && 'You Win'}\n        {gameOver && 'Game Over'}\n      </Container>\n      <GlobalStyle />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Store from './core/store/Store';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Store>\n      <App />\n    </Store>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}